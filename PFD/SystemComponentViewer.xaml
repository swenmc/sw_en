<Window x:Class="PFD.SystemComponentViewer"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:gif="http://wpfanimatedgif.codeplex.com"
        xmlns:local="clr-namespace:PFD"
        mc:Ignorable="d"
        WindowStartupLocation="CenterScreen"
        Title="System Component Viewer"  Height="800" Width="1300" Icon="Resources/FSlogoNew_SCV.png" KeyDown="Window_KeyDown">
    <Window.Resources>
        <SolidColorBrush x:Key="colorReadOnlyCell" Color="WhiteSmoke" />
        <!-- Light gray color of readonly cell background -->
        <SolidColorBrush x:Key="colorReadOnlyCellText" Color="Black" />
        <!-- Black color of readonly cell text -->
        <SolidColorBrush x:Key="colorCellError" Color="Red" />
        <Style TargetType="{x:Type TextBox}">            
            <EventSetter Event="GotFocus"  Handler="SA_TextBox_GotFocus"/>
            <!--<EventSetter Event="LostFocus"  Handler="TextBox_LostFocus"/>-->
        </Style>
        
        <Style x:Key="NotFocusableCellStyle" TargetType="{x:Type DataGridCell}">
            <Setter Property="Focusable" Value="False"></Setter>
            <!--<Setter Property="KeyboardNavigation.IsTabStop" Value="False"></Setter>-->
            <Setter Property="IsTabStop" Value="False"/>
        </Style>
        
            
    </Window.Resources>
    <Grid Name="MainGrid">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="10" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="30" />
        </Grid.RowDefinitions>

        <StackPanel Name="WaitPanel" Visibility="Hidden" Grid.Row="0" Grid.Column="0" Grid.RowSpan="10" Grid.ColumnSpan="10" Panel.ZIndex="100" HorizontalAlignment="Center" VerticalAlignment="Center">
            <Image Name="WaitImage" Width="400" Height="400" gif:ImageBehavior.AnimatedSource="spin.gif" />
        </StackPanel>

        <Grid Grid.Row="0" Grid.Column="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="208" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="250" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="40" />
                <RowDefinition Height="40" />
                <RowDefinition Height="40" />
                <RowDefinition Height="40" />
                <RowDefinition Height="40" />
                <RowDefinition Height="*" />
                <RowDefinition Height="40" />
                <RowDefinition Height="150" />
                <RowDefinition Height="40" />
                <RowDefinition Height="150" />
                <RowDefinition Height="10" />
            </Grid.RowDefinitions>

            <TextBlock Grid.Row="0" Grid.Column="0" Text="Type:" HorizontalAlignment="Left"  VerticalAlignment="Top" Margin="10 5 0 0"/>
            <ComboBox Grid.Row="0" Grid.Column="1" Name ="Combobox_Type" HorizontalAlignment="Left" MinWidth="180" VerticalAlignment="Top" Margin="0 5 0 0"
                      ItemsSource="{Binding Path=ComponentTypes}" SelectedIndex="{Binding Path=ComponentTypeIndex, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True}" />
            <!--<ComboBox Grid.Row="0" Grid.Column="1" Name ="Com_Type" HorizontalAlignment="Left" MinWidth="150" VerticalAlignment="Top" Margin="155 5 0 0"
                      ItemsSource="{Binding Path=ComponentTypes}" SelectedIndex="{Binding Path=ComponentTypeIndex, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True}"/>-->

            <TextBlock Grid.Row="1" Grid.Column="0" Text="Serie:" HorizontalAlignment="Left"  VerticalAlignment="Top" Margin="10 0 0 0"/>
            <ComboBox Grid.Row="1" Grid.Column="1" Name ="Combobox_Series" HorizontalAlignment="Left" MinWidth="180" VerticalAlignment="Top" 
                      ItemsSource="{Binding Path=ComponentSeries}" SelectedIndex="{Binding Path=ComponentSerieIndex, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True, Mode=TwoWay}"/>
            <!--<ComboBox Grid.Row="1" Grid.Column="2" Name ="Com_Series" HorizontalAlignment="Left" Margin="155 0 0 0" MinWidth="150" VerticalAlignment="Top" 
                      ItemsSource="{Binding Path=Plates}" DisplayMemberPath="Key" SelectedItem="{Binding Path=}" />-->

            <TextBlock Grid.Row="2" Grid.Column="0" Text="Component:" HorizontalAlignment="Left"  VerticalAlignment="Top" Margin="10 0 0 0"/>
            <ComboBox Grid.Row="2" Grid.Column="1" Name ="Combobox_Component" HorizontalAlignment="Left" MinWidth="180" VerticalAlignment="Top" 
                      ItemsSource="{Binding Path=Components}" SelectedIndex="{Binding Path=ComponentIndex, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True, Mode=TwoWay}"/>
            <!--<ComboBox Grid.Row="2" Grid.Column="1" Name ="Com_Component" HorizontalAlignment="Left" Margin="155 0 0 0" MinWidth="150" VerticalAlignment="Top" 
                      ItemsSource="{Binding SelectedItem.Value, ElementName=Com_Series}" 
                      DisplayMemberPath="Name" SelectedItem="{Binding Path=SelectedComponent, UpdateSourceTrigger=PropertyChanged}" />-->

            <TextBlock Grid.Row="3" Grid.Column="0" Name="TxtCombScrewArrangment" Text="Screw Arrangement:" HorizontalAlignment="Left"  VerticalAlignment="Top" Margin="10 0 0 0"/>
            <ComboBox Grid.Row="3" Grid.Column="1" Name ="Combobox_ScrewArrangement" HorizontalAlignment="Left" MinWidth="180" VerticalAlignment="Top" 
                      ItemsSource="{Binding Path=ScrewArrangements}" SelectedIndex="{Binding Path=ScrewArrangementIndex, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True, Mode=TwoWay}"/>

            <StackPanel Name="panelOptions2D" Grid.Row="0" Grid.RowSpan="6" Grid.Column="2" Margin="10,5,0,120">
                <TextBlock Text="Display Options" HorizontalAlignment="Left"/>
                <CheckBox Name="chbDrawPoints2D" IsChecked="{Binding Path=DrawPoints2D}" Content="Draw Points" Margin="0 5 0 0"/>
                <CheckBox Name="chbDrawOutLine2D" IsChecked="{Binding Path=DrawOutLine2D}" Content="Draw Outline" Margin="0 5 0 0"/>
                <CheckBox Name="chbDrawPointNumbers2D" IsChecked="{Binding Path=DrawPointNumbers2D}" Content="Draw Point Numbers" Margin="0 5 0 0"/>
                <CheckBox Name="chbDrawHoles2D" IsChecked="{Binding Path=DrawHoles2D}" Content="Draw Holes" Margin="0 5 0 0"/>
                <CheckBox Name="chbDrawHoleCentreSymbol2D" IsChecked="{Binding Path=DrawHoleCentreSymbol2D}" Content="Draw Hole Centre Symbol" Margin="0 5 0 0"/>
                <CheckBox Name="chbDrawDrillingRoute2D" IsChecked="{Binding Path=DrawDrillingRoute2D}" Content="Draw Drilling Route" Margin="0 5 0 0"/>
                <CheckBox Name="chbDrawDimensions2D" IsChecked="{Binding Path=DrawDimensions2D}" Content="Draw Dimensions" Margin="0 5 0 0"/>
                <CheckBox Name="chbDrawMemberOutline2D" IsChecked="{Binding Path=DrawMemberOutline2D}" Content="Draw Member Outline" Margin="0 5 0 0"/>
                <CheckBox Name="chbDrawBendLines2D" IsChecked="{Binding Path=DrawBendLines2D}" Content="Draw Bend Lines" Margin="0 5 0 0"/>
            </StackPanel>
            <StackPanel Name="panelOptions3D" Visibility="Hidden" Grid.Row="0" Grid.RowSpan="4" Grid.Column="2" Margin="10,5,0,10">
                <TextBlock Text="Display Options" HorizontalAlignment="Left"/>
                <CheckBox Name="chbDrawScrews3D" IsChecked="{Binding Path=DrawScrews3D}" Content="Draw Screws" Margin="0 5 0 0"/>
                <CheckBox Name="chbDrawPoints3D" IsChecked="{Binding Path=DrawPoints3D}" Content="Draw Points" Margin="0 5 0 0"/>
                <CheckBox Name="chbDrawPoint3DNumbers3D" IsChecked="{Binding Path=DrawPoint3DNumbers3D}" Content="Draw Point Numbers" Margin="0 5 0 0"/>
                <CheckBox Name="chbMirrorPlate3D" IsChecked="{Binding Path=MirrorPlate3D}" Content="Mirror" Margin="0 5 0 0"/>
            </StackPanel>

            <StackPanel Name="panelOptionsTransform2D" Grid.Row="5" Grid.Column="2" Margin="10,35,0,0" Grid.RowSpan="2">
                <TextBlock Text="Transformation Options" HorizontalAlignment="Left"/>
                <CheckBox x:Name="CheckBox_MirrorY" IsChecked="{Binding Path=MirrorY}" Content="Mirror about vertical axis y-y" Margin="0 5 0 0" />
                <!--Checked="CheckBox_MirrorY_Checked" Unchecked="CheckBox_MirrorY_Unchecked"-->
                <CheckBox x:Name="CheckBox_MirrorX" IsChecked="{Binding Path=MirrorX}" Content="Mirror about horizontal axis x-x" Margin="0 5 0 0" />
                <!--Checked="CheckBox_MirrorX_Checked" Unchecked="CheckBox_MirrorX_Unchecked"-->
                <CheckBox x:Name="CheckBox_Rotate_CW" IsChecked="{Binding Path=Rotate90CW}" Content="Rotate 90 deg clockwise" Margin="0 5 0 0" />
                <!--Checked="CheckBox_Rotate_CW_Checked" Unchecked="CheckBox_Rotate_CW_Unchecked"-->
                <CheckBox x:Name="CheckBox_Rotate_CCW" IsChecked="{Binding Path=Rotate90CCW}" Content="Rotate 90 deg counter-clockwise" Margin="0 5 0 0" />
                <!--Checked ="CheckBox_Rotate_CCW_Checked"  Unchecked="CheckBox_Rotate_CCW_Unchecked"-->
            </StackPanel>
            <StackPanel Name="panelProductionInfo" Grid.Row="6" Grid.Column="2" Margin="10,10,0,0" Grid.RowSpan="2">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                        <ColumnDefinition Width="2*"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition ></RowDefinition>
                        <RowDefinition ></RowDefinition>
                        <RowDefinition ></RowDefinition>
                        <RowDefinition ></RowDefinition>
                        <RowDefinition ></RowDefinition>
                        <RowDefinition ></RowDefinition>
                    </Grid.RowDefinitions>
                    <TextBlock Text="Production Info: " HorizontalAlignment="Left" Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="2"/>
                    <Label Name="LabelJobNumber" HorizontalAlignment="Left" Grid.Column="0" Grid.Row="1">Job Number:</Label>
                    <TextBox Name="TextBoxJobNumber" Grid.Column="1" Grid.Row="1" Text="{Binding Path=JobNumber}" MinWidth="150" Height="20" HorizontalAlignment="Left"></TextBox>
                    <Label Name="LabelCustomer" HorizontalAlignment="Left" Grid.Column="0" Grid.Row="2">Customer: </Label>
                    <TextBox Name="TextBoxCustomer" Grid.Column="1" Grid.Row="2" Text="{Binding Path=Customer}" MinWidth="150" Height="20" HorizontalAlignment="Left"></TextBox>
                    <Label Name="LabelAmount" HorizontalAlignment="Left" Grid.Column="0" Grid.Row="3">Amount: </Label>
                    <TextBox Name="TextBoxAmount" Grid.Column="1" Grid.Row="3" Text="{Binding Path=Amount}" MinWidth="60" Height="20" HorizontalAlignment="Left"></TextBox>
                    <Label Name="LabelAmountRH" HorizontalAlignment="Left" Grid.Column="0" Grid.Row="4">RH:</Label>
                    <TextBox Name="TextBoxAmountRH" Grid.Column="1" Grid.Row="4" Text="{Binding Path=AmountRH}" MinWidth="40" Height="20" HorizontalAlignment="Left"></TextBox>
                    <Label Name="LabelAmountLH" HorizontalAlignment="Left" Grid.Column="0" Grid.Row="5">LH:</Label>
                    <TextBox Name="TextBoxAmountLH" Grid.Column="1" Grid.Row="5" Text="{Binding Path=AmountLH}" MinWidth="40" Height="20" HorizontalAlignment="Left"></TextBox>
                </Grid>
            </StackPanel>

            <TextBlock Grid.Row="4" Grid.Column="0" Name="TxtScrewArrangment" Text="Screw Arrangement" HorizontalAlignment="Left"  VerticalAlignment="Bottom" Margin="10 0 0 5"/>
            <DataGrid Grid.Row="5" Grid.Column="0" Grid.ColumnSpan="2" Name="DataGridScrewArrangement" Margin="10 0 0 0"
                      ItemsSource="{Binding Path=ScrewArrangementParameters}"
                      HeadersVisibility="Column" AutoGenerateColumns="False" IsEnabled="True" IsReadOnly="False" 
                      SelectionMode="Extended" SelectionUnit="Cell" CanUserSortColumns="False"                                              
                      >
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Name" Width="*" IsReadOnly="True" Binding="{Binding Name}" >
                        <DataGridTextColumn.CellStyle>
                            <Style TargetType="DataGridCell">
                                <Setter Property="Background" Value="{StaticResource colorReadOnlyCell}" />
                                <Setter Property="Foreground" Value= "{StaticResource colorReadOnlyCellText}"/>
                                <Setter Property="KeyboardNavigation.IsTabStop" Value="False"></Setter>
                            </Style>
                        </DataGridTextColumn.CellStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="Symbol" Width="40" IsReadOnly="True" Binding="{Binding ShortCut}">
                        <DataGridTextColumn.CellStyle>
                            <Style TargetType="DataGridCell">
                                <Setter Property="Background" Value="{StaticResource colorReadOnlyCell}" />
                                <Setter Property="Foreground" Value= "{StaticResource colorReadOnlyCellText}"/>
                                <Setter Property="KeyboardNavigation.IsTabStop" Value="False"></Setter>
                            </Style>
                        </DataGridTextColumn.CellStyle>
                    </DataGridTextColumn>
                    <DataGridTemplateColumn Header="Value" Width="60" IsReadOnly="False" CellStyle="{StaticResource NotFocusableCellStyle}">                        
                        <DataGridTemplateColumn.CellTemplate>                            
                            <DataTemplate>
                                <ContentControl Content="{Binding}">
                                    <ContentControl.Style>                                        
                                        <Style TargetType="ContentControl">
                                            <Style.Triggers>
                                                <!--<DataTrigger Binding="{Binding IsReadonly}" Value="0" >
                                                    <Setter Property="Background" Value="WhiteSmoke" />
                                                </DataTrigger>-->
                                                <DataTrigger Binding="{Binding CheckType}" Value="CheckBox">
                                                    <Setter Property="ContentTemplate">
                                                        <Setter.Value>
                                                            <DataTemplate>
                                                                <CheckBox HorizontalAlignment="Center" IsChecked="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  />
                                                            </DataTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Setter Property="Focusable" Value="False"></Setter>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding CheckType}" Value="ComboBox">
                                                    <Setter Property="ContentTemplate">
                                                        <Setter.Value>
                                                            <DataTemplate>
                                                                <ComboBox HorizontalAlignment="Right" SelectedValue="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" ItemsSource="{Binding Values, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                                            </DataTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Setter Property="Focusable" Value="False"></Setter>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding CheckType}" Value="TextBox">
                                                    <Setter Property="ContentTemplate">
                                                        <Setter.Value>
                                                            <DataTemplate>
                                                                <TextBox Name="SA_TextBox" TextAlignment="Right" Text="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" local:FocusAttacher.Focus="True" />
                                                            </DataTemplate>                                                            
                                                        </Setter.Value>                                                        
                                                    </Setter>
                                                    <Setter Property="Focusable" Value="False"></Setter>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding CheckType}" Value="TextBlock">
                                                    <Setter Property="ContentTemplate">
                                                        <Setter.Value>
                                                            <DataTemplate>
                                                                <TextBlock TextAlignment="Right" Text="{Binding Value}" />
                                                            </DataTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Setter Property="Focusable" Value="False"></Setter>
                                                </DataTrigger>
                                            </Style.Triggers>
                                            
                                        </Style>
                                    </ContentControl.Style>
                                </ContentControl>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn Header="Unit" Width="50" IsReadOnly="True" Binding="{Binding Unit}" >
                        <DataGridTextColumn.CellStyle>
                            <Style TargetType="DataGridCell">
                                <Setter Property="Background" Value="{StaticResource colorReadOnlyCell}" />
                                <Setter Property="Foreground" Value= "{StaticResource colorReadOnlyCellText}"/>
                                <Setter Property="KeyboardNavigation.IsTabStop" Value="False"></Setter>
                            </Style>
                        </DataGridTextColumn.CellStyle>
                    </DataGridTextColumn>
                </DataGrid.Columns>
            </DataGrid>

            <TextBlock Grid.Row="6" Grid.Column="0" Name="TxtGeometry" Text="Geometry" HorizontalAlignment="Left"  VerticalAlignment="Bottom" Margin="10 0 0 5"/>
            <DataGrid Grid.Row="7" Grid.Column="0" Grid.ColumnSpan="2" Name="DataGridGeometry" Margin="10 0 0 0"
                      ItemsSource="{Binding Path=ComponentGeometry}" 
                      HeadersVisibility="Column" AutoGenerateColumns="False" IsEnabled="True" IsReadOnly="False" 
                      SelectionMode="Single" CellEditEnding="DataGridGeometry_CellEditEnding" CanUserSortColumns="False" 
                      SelectionUnit="Cell" >
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Name" Width="*" IsReadOnly="True" Binding="{Binding Name}" >
                        <DataGridTextColumn.CellStyle>
                            <Style TargetType="DataGridCell">
                                <Setter Property="Background" Value="{StaticResource colorReadOnlyCell}" />
                                <Setter Property="Foreground" Value= "{StaticResource colorReadOnlyCellText}"/>
                                <Setter Property="KeyboardNavigation.IsTabStop" Value="False"></Setter>
                            </Style>
                        </DataGridTextColumn.CellStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="Symbol" Width="40" IsReadOnly="True" Binding="{Binding ShortCut}" >
                        <DataGridTextColumn.CellStyle>
                            <Style TargetType="DataGridCell">
                                <Setter Property="Background" Value="{StaticResource colorReadOnlyCell}" />
                                <Setter Property="Foreground" Value= "{StaticResource colorReadOnlyCellText}"/>
                                <Setter Property="KeyboardNavigation.IsTabStop" Value="False"></Setter>
                            </Style>
                        </DataGridTextColumn.CellStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="Value" Width="60" IsReadOnly="{Binding IsReadOnly}" Binding="{Binding Value, Mode=TwoWay}" >
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="HorizontalAlignment" Value="Right" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="Unit" Width="50" IsReadOnly="True" Binding="{Binding Unit}" >
                        <DataGridTextColumn.CellStyle>
                            <Style TargetType="DataGridCell">
                                <Setter Property="Background" Value="{StaticResource colorReadOnlyCell}" />
                                <Setter Property="Foreground" Value= "{StaticResource colorReadOnlyCellText}"/>
                                <Setter Property="KeyboardNavigation.IsTabStop" Value="False"></Setter>
                            </Style>
                        </DataGridTextColumn.CellStyle>
                    </DataGridTextColumn>
                </DataGrid.Columns>
            </DataGrid>

            <TextBlock Grid.Row="8" Grid.Column="0" Text="Parameters" HorizontalAlignment="Left"  VerticalAlignment="Bottom" Margin="10 0 0 5"/>
            <DataGrid Grid.Row="9" Grid.Column="0" Grid.ColumnSpan="2" Name="DataGridDetails" Margin="10 0 0 0" 
                      ItemsSource="{Binding Path=ComponentDetails}" HeadersVisibility="Column" 
                      AutoGenerateColumns="False" IsReadOnly="True" CanUserSortColumns="False" SelectionUnit="Cell">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Name" Width="*" Binding="{Binding Name}" >
                        <DataGridTextColumn.CellStyle>
                            <Style TargetType="DataGridCell">
                                <Setter Property="Background" Value="{StaticResource colorReadOnlyCell}" />
                                <Setter Property="Foreground" Value= "{StaticResource colorReadOnlyCellText}"/>
                                <Setter Property="KeyboardNavigation.IsTabStop" Value="False"></Setter>
                            </Style>
                        </DataGridTextColumn.CellStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="Symbol" Width="40" Binding="{Binding ShortCut}" >
                        <DataGridTextColumn.CellStyle>
                            <Style TargetType="DataGridCell">
                                <Setter Property="Background" Value="{StaticResource colorReadOnlyCell}" />
                                <Setter Property="Foreground" Value= "{StaticResource colorReadOnlyCellText}"/>
                                <Setter Property="KeyboardNavigation.IsTabStop" Value="False"></Setter>
                            </Style>
                        </DataGridTextColumn.CellStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="Value" Width="60" Binding="{Binding Value}" >
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="HorizontalAlignment" Value="Right" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                        <DataGridTextColumn.CellStyle>
                            <Style TargetType="DataGridCell">
                                <Setter Property="Background" Value="{StaticResource colorReadOnlyCell}" />
                                <Setter Property="Foreground" Value= "{StaticResource colorReadOnlyCellText}"/>
                            </Style>
                        </DataGridTextColumn.CellStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="Unit" Width="50" Binding="{Binding Unit}" >
                        <DataGridTextColumn.CellStyle>
                            <Style TargetType="DataGridCell">
                                <Setter Property="Background" Value="{StaticResource colorReadOnlyCell}" />
                                <Setter Property="Foreground" Value= "{StaticResource colorReadOnlyCellText}"/>
                                <Setter Property="KeyboardNavigation.IsTabStop" Value="False"></Setter>
                            </Style>
                        </DataGridTextColumn.CellStyle>
                    </DataGridTextColumn>
                </DataGrid.Columns>
            </DataGrid>
        </Grid>
        <Grid Grid.Row="0" Grid.Column="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="10" />
            </Grid.RowDefinitions>
            <TabControl Name="MainTabControl" Grid.Row="0" Grid.Column="0" SelectionChanged="MainTabControl_SelectionChanged">
                <TabItem Name="tabItem2D" Header="View 2D">
                    <Frame Name ="Frame2D" Content="2D Preview" NavigationUIVisibility="Hidden"
                       HorizontalAlignment="Stretch" VerticalAlignment="Stretch" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" SizeChanged="Frame2D_SizeChanged"/>
                </TabItem>
                <TabItem Name="tabItem3D" Header="View 3D">
                    <Frame Name ="Frame3D" Content="3D Preview" NavigationUIVisibility="Hidden"
                HorizontalAlignment="Stretch" VerticalAlignment="Stretch" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"/>
                </TabItem>
                <TabItem Name="tabItemDoc" Header="View CNC file">
                    <Grid VerticalAlignment="Stretch">
                        <!--<DocumentViewer Name="DocumentPreview" VerticalAlignment="Stretch"></DocumentViewer>-->
                        <FlowDocumentScrollViewer Name="FlowDocViewer" VerticalAlignment="Stretch"></FlowDocumentScrollViewer>
                    </Grid>
                </TabItem>
            </TabControl>
        </Grid>

        <StackPanel Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="3" Name="BtnsPanel" Orientation="Horizontal" VerticalAlignment="Center" >
            <Button Name="BtnExportDXF" Content="Export to DXF" Margin="5 0 5 0"
                HorizontalAlignment="Left" VerticalAlignment="Top" Click="BtnExportDXF_Click" />
            <Button Name="BtnExportDXF_3D" Content="Export 3D to DXF" Margin="5 0 5 0"
                HorizontalAlignment="Left" VerticalAlignment="Top" Click="BtnExportDXF_3D_Click" />
            <Button Name="BtnFindCNCPath" Content="Find CNC Path" Margin="15 0 5 0"
                HorizontalAlignment="Left" VerticalAlignment="Top" Click="BtnFindCNCPath_Click"/>
            <Button Name="BtnExportCNC" Content="Export to CNC" Margin="5 0 5 0"
                HorizontalAlignment="Left" VerticalAlignment="Top" Click="BtnExportCNC_Click"/>

            <Button Name="BtnShowCNCSetupFile" Content="Show CNC Setup File" Margin="5 0 5 0"
                HorizontalAlignment="Left" VerticalAlignment="Top" Click="BtnShowCNCSetupFile_Click"/>
            <Button Name="BtnShowCNCDrillingFile" Content="Show CNC Drilling File" Margin="5 0 5 0"
                HorizontalAlignment="Left" VerticalAlignment="Top" Click="BtnShowCNCDrillingFile_Click"/>

            <Button Name="BtnExportToPDF" Content="Export to PDF" Margin="5 0 5 0"
                HorizontalAlignment="Left" VerticalAlignment="Top" Click="BtnExportToPDF_Click"/>
            <Button Name="BtnSavePlate" Content="Save Plate" Margin="5 0 5 0"
                HorizontalAlignment="Left" VerticalAlignment="Top" Click="BtnSavePlate_Click"/>
            <Button Name="BtnLoadPlate" Content="Load Plate" Margin="5 0 5 0"
                HorizontalAlignment="Left" VerticalAlignment="Top" Click="BtnLoadPlate_Click"/>
            <Button Name="BtnExportToPDFFromDirectory" Content="Export to PDF from directory" Margin="5 0 5 0"
                HorizontalAlignment="Left" VerticalAlignment="Top" Click="BtnExportToPDFFromDirectory_Click"/>
            <Button Name="BtnExportToXLSFromDirectory" Content="Export to XLS from directory" Margin="5 0 5 0"
                HorizontalAlignment="Left" VerticalAlignment="Top" Click="BtnExportToXLSFromDirectory_Click"/>
        </StackPanel>
    </Grid>
</Window>
